// Code generated by hertz generator.

package interaction

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	interaction "tiktok/biz/model/interaction"
)

// Like .
// @router tiktok/like/action [POST]
func Like(ctx context.Context, c *app.RequestContext) {
	var err error
	var req interaction.LikeListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(interaction.LikeResponse)

	c.JSON(consts.StatusOK, resp)
}

// LikeList .
// @router tiktok/like/list [GET]
func LikeList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req interaction.LikeListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(interaction.LikeListResponse)

	c.JSON(consts.StatusOK, resp)
}

// CommentPublish .
// @router tiktok/comment/publish [POST]
func CommentPublish(ctx context.Context, c *app.RequestContext) {
	var err error
	var req interaction.CommentListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(interaction.CommentPublishResponse)

	c.JSON(consts.StatusOK, resp)
}

// CommentList .
// @router tiktok/comment/list [GET]
func CommentList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req interaction.CommentListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(interaction.CommentListResponse)

	c.JSON(consts.StatusOK, resp)
}

// DeleteComment .
// @router tiktok/comment/delete [DELETE]
func DeleteComment(ctx context.Context, c *app.RequestContext) {
	var err error
	var req interaction.DeleteCommentRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(interaction.DeleteCommentResponse)

	c.JSON(consts.StatusOK, resp)
}
