// Code generated by hertz generator.

package social

import (
	"context"
	"tiktok/pkg/e"
	"tiktok/service"
	"tiktok/types"

	"github.com/cloudwego/hertz/pkg/app"
	social "tiktok/biz/model/social"
)

// Follow .
// @router tiktok/relation/action [POST]
func Follow(ctx context.Context, c *app.RequestContext) {
	var err error
	var req social.FollowRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		types.RespError(c, e.InvalidParams)
		return
	}

	l := service.GetSocialService()
	code, err := l.Follow(ctx, &req)
	if err != nil {
		types.RespError(c, code)
		return
	}
	types.RespSuccess(c)
}

// FollowList .
// @router tiktok/following/list [GET]
func FollowList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req social.FollowListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		types.RespError(c, e.InvalidParams)
		return
	}

	resp := new(social.FollowListResponse)
	l := service.GetSocialService()
	resp, count, code, err := l.FollowList(ctx, &req)
	if err != nil {
		types.RespError(c, code)
		return
	}
	types.RespList(c, resp, count)
}

// FansList .
// @router tiktok/follower/list [GET]
func FansList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req social.FansListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		types.RespError(c, e.InvalidParams)
		return
	}

	resp := new(social.FansListResponse)
	l := service.GetSocialService()
	resp, count, code, err := l.FansList(ctx, &req)
	if err != nil {
		types.RespError(c, code)
		return
	}
	types.RespList(c, resp, count)
}

// FriendsList .
// @router tiktok/friends/list [GET]
func FriendsList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req social.FriendsListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		types.RespError(c, e.InvalidParams)
		return
	}

	resp := new(social.FriendsListResponse)
	l := service.GetSocialService()
	resp, count, code, err := l.FriendsList(ctx, &req)
	if err != nil {
		types.RespError(c, code)
		return
	}
	types.RespList(c, resp, count)
}
